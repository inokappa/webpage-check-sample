version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.11
  slack: circleci/slack@3.4.1

executors:
  default:
    docker:
      - image: circleci/node:12.4
      - image: circleci/python:2.7

commands:
  check_prepare:
    steps:
      - aws-s3/sync:
          from: s3://${ROOT_PATH}/
          to: /home/circleci/project/${ROOT_PATH}/
          overwrite: true
          arguments: >
            --delete
  npm_install:
    steps:
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - restore_cache:
          name: Restore Dependencies
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
            - dependencies
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          name: Save Dependencies
          key: dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

jobs:
  check:
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - npm_install
      - check_prepare
      - run:
          name: Run test
          command: ./node_modules/.bin/jasmine
      - run:
          name: List files
          command: |
            ls -l /home/circleci/project/${ROOT_PATH}/*
          when: always
      - run:
          name: Store Images
          command: |
            aws s3 sync /home/circleci/project/${ROOT_PATH}/ s3://${ROOT_PATH}/
          when: always
      - slack/status:
          fail_only: true
          mentions: ${SLACK_MEMBER_IDS}

workflows:
  version: 2
  byhand-webpage-check:
    jobs:
      - check
  triggerd-webpage-check:
    triggers:
      - schedule:
          cron: "3 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - check
